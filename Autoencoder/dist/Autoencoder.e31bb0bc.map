{"version":3,"sources":["datas.js","ui.js","index.js"],"names":["IMAGE_H","IMAGE_W","IMAGE_SIZE","NUM_CLASSES","NUM_DATASET_ELEMENTS","NUM_TRAIN_ELEMENTS","NUM_TEST_ELEMENTS","MNIST_IMAGES_SPRITE_PATH","MNIST_LABELS_PATH","MnistData","img","Image","canvas","document","createElement","ctx","getContext","imgRequest","Promise","resolve","reject","crossOrigin","onload","width","naturalWidth","height","naturalHeight","datasetBytesBuffer","ArrayBuffer","chunkSize","i","datasetBytesView","Float32Array","drawImage","imageData","getImageData","j","data","length","datasetImages","src","labelsRequest","fetch","all","imgResponse","labelsResponse","Uint8Array","arrayBuffer","datasetLabels","trainImages","slice","testImages","trainLabels","testLabels","xs","tf","tensor4d","labels","tensor2d","numExamples","showTestResults","batch","output","epochs","testExamples","shape","element","getElementById","innerHTML","image","out","div","className","draw","flatten","canvas1","appendChild","ImageData","dataSync","putImageData","createConvModel","n_layers","n_units","hidden","latent_dim","Number","img_shape","img_units","input","h","layers","apply","batchNormalization","dense","units","activation","tm","addLayer","add","o","encoder","model","inputs","outputs","reshape","targetShape","decoder","z","auto","trainEpochs","trainData","testData","b","train","e","value","validationSplit","lr","y","compile","optimizer","loss","onBatchEnd","loadbar","fit","batchSize","callbacks","showPredictions","examples","getTestData","tidy","predict","ui","vis","run","load","getTrainData","oninput","console","log","ele","style","display","elem","runtrain","Math","min","ceil","normaltensor","prediction","tensor","toFloat","inputMax","max","inputMin","sub","normal","container","mot","cont","sample","obj","x","mul","toInt","browser","toPixels","mouse","fillStyle","fillRect","addEventListener","pageX","offsetLeft","pageY","offsetTop","on","removeEventListener","plot2d","decision","context","clearRect","el","canv","outcanv","ct","clear","rundraw","last_mouse","lineWidth","lineJoin","lineCap","strokeStyle","onPaint","beginPath","moveTo","lineTo","closePath","stroke","sm","fromPixels","resizeNearestNeighbor","pr"],"mappings":"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","file":"Autoencoder.e31bb0bc.map","sourceRoot":"..","sourcesContent":["\r\n\r\n\r\nexport const IMAGE_H = 28;\r\nexport const IMAGE_W = 28;\r\nconst IMAGE_SIZE = IMAGE_H * IMAGE_W;\r\nconst NUM_CLASSES = 10;\r\nconst NUM_DATASET_ELEMENTS = 65000;\r\n\r\nconst NUM_TRAIN_ELEMENTS = 55000;\r\nconst NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\r\n\r\nconst MNIST_IMAGES_SPRITE_PATH =\r\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\r\nconst MNIST_LABELS_PATH =\r\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8';\r\n\r\n/**\r\n * A class that fetches the sprited MNIST dataset and provide data as\r\n * tf.Tensors.\r\n */\r\nexport class MnistData {\r\n  constructor() {}\r\n\r\n  async load() {\r\n    // Make a request for the MNIST sprited image.\r\n    const img = new Image();\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const imgRequest = new Promise((resolve, reject) => {\r\n      img.crossOrigin = '';\r\n      img.onload = () => {\r\n        img.width = img.naturalWidth;\r\n        img.height = img.naturalHeight;\r\n\r\n        const datasetBytesBuffer =\r\n            new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\r\n\r\n        const chunkSize = 5000;\r\n        canvas.width = img.width;\r\n        canvas.height = chunkSize;\r\n\r\n        for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\r\n          const datasetBytesView = new Float32Array(\r\n              datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4,\r\n              IMAGE_SIZE * chunkSize);\r\n          ctx.drawImage(\r\n              img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width,\r\n              chunkSize);\r\n\r\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n          for (let j = 0; j < imageData.data.length / 4; j++) {\r\n            // All channels hold an equal value since the image is grayscale, so\r\n            // just read the red channel.\r\n            datasetBytesView[j] = imageData.data[j * 4] / 255;\r\n          }\r\n        }\r\n        this.datasetImages = new Float32Array(datasetBytesBuffer);\r\n\r\n        resolve();\r\n      };\r\n      img.src = MNIST_IMAGES_SPRITE_PATH;\r\n    });\r\n\r\n    const labelsRequest = fetch(MNIST_LABELS_PATH);\r\n    const [imgResponse, labelsResponse] =\r\n        await Promise.all([imgRequest, labelsRequest]);\r\n\r\n    this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\r\n\r\n    // Slice the the images and labels into train and test sets.\r\n    this.trainImages =\r\n        this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\r\n    this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\r\n    this.trainLabels =\r\n        this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\r\n    this.testLabels =\r\n        this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\r\n  }\r\n\r\n  /**\r\n   * Get all training data as a data tensor and a labels tensor.\r\n   *\r\n   * @returns\r\n   *   xs: The data tensor, of shape `[numTrainExamples, 28, 28, 1]`.\r\n   *   labels: The one-hot encoded labels tensor, of shape\r\n   *     `[numTrainExamples, 10]`.\r\n   */\r\n  getTrainData() {\r\n    const xs = tf.tensor4d(\r\n        this.trainImages,\r\n        [this.trainImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\r\n    const labels = tf.tensor2d(\r\n        this.trainLabels, [this.trainLabels.length / NUM_CLASSES, NUM_CLASSES]);\r\n    return {xs, labels};\r\n  }\r\n\r\n  /**\r\n   * Get all test data as a data tensor a a labels tensor.\r\n   *\r\n   * @param {number} numExamples Optional number of examples to get. If not\r\n   *     provided,\r\n   *   all test examples will be returned.\r\n   * @returns\r\n   *   xs: The data tensor, of shape `[numTestExamples, 28, 28, 1]`.\r\n   *   labels: The one-hot encoded labels tensor, of shape\r\n   *     `[numTestExamples, 10]`.\r\n   */\r\n  getTestData(numExamples) {\r\n    let xs = tf.tensor4d(\r\n        this.testImages,\r\n        [this.testImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\r\n    let labels = tf.tensor2d(\r\n        this.testLabels, [this.testLabels.length / NUM_CLASSES, NUM_CLASSES]);\r\n\r\n    if (numExamples != null) {\r\n      xs = xs.slice([0, 0, 0, 0], [numExamples, IMAGE_H, IMAGE_W, 1]);\r\n      labels = labels.slice([0, 0], [numExamples, NUM_CLASSES]);\r\n    }\r\n    return {xs, labels};\r\n  }\r\n}\r\n","\r\n\r\nexport function showTestResults(batch, output,epochs) {\r\n  const testExamples = batch.shape[0];\r\n  const element=document.getElementById('new')\r\n  element.innerHTML=\"<span style='display:block;'>After epochs = \"+epochs+\"</span>\"\r\n  for (let i = 0; i < testExamples; i++) {\r\n    const image = batch.slice([i, 0], [1, batch.shape[1]]);\r\n\r\n    const out =output.slice([i, 0], [1, batch.shape[1]]);\r\n\r\n    const div = document.createElement('div');\r\n    div.className = 'pred-container';\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.className = 'prediction-canvas';\r\n    draw(image.flatten(), canvas);\r\n    const canvas1 = document.createElement('canvas');\r\n    canvas1.className = 'prediction-canvas';\r\n    draw(out.flatten(), canvas1);\r\n\r\n\r\n    div.appendChild(canvas1);\r\n    div.appendChild(canvas);\r\n\r\n    element.appendChild(div);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function draw(image, canvas) {\r\n  const [width, height] = [28, 28];\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  const ctx = canvas.getContext('2d');\r\n  const imageData = new ImageData(width, height);\r\n  const data = image.dataSync();\r\n  for (let i = 0; i < height * width; ++i) {\r\n    const j = i * 4;\r\n    imageData.data[j + 0] = data[i] * 255;\r\n    imageData.data[j + 1] = data[i] * 255;\r\n    imageData.data[j + 2] = data[i] * 255;\r\n    imageData.data[j + 3] = 255;\r\n  }\r\n  ctx.putImageData(imageData, 0, 0);\r\n}\r\n","\r\n\r\n\r\n\r\n\r\n// This is a helper class for loading and managing MNIST data specifically.\r\n// It is a useful example of how you could create your own data manager class\r\n// for arbitrary data though. It's worth a look :)\r\nimport {IMAGE_H, IMAGE_W, MnistData} from './datas.js';\r\n\r\nimport * as ui from './ui.js';\r\n\r\n\r\nfunction createConvModel(n_layers,n_units,hidden) {                            //resnet-densenet-batchnorm\r\n  this.latent_dim =  Number(hidden);                                         //final dimension of hidden layer\r\n  this.n_layers = Number(n_layers);                                           //how many hidden layers in encoder and decoder\r\n  this.n_units =  Number(n_units);                                         //output dimension of each layer\r\n  this.img_shape = [28,28];\r\n  this.img_units = this.img_shape[0] * this.img_shape[1];\r\n  // build the encoder\r\n\r\n  var i = tf.input({shape: this.img_shape});\r\n  var h = tf.layers.flatten().apply(i);\r\n  h=tf.layers.batchNormalization(-1).apply(h);\r\n  h = tf.layers.dense({units: this.n_units, activation:'relu'}).apply(h);\r\n  for (var j=0; j<this.n_layers-1; j++) {\r\n    var tm=h;\r\n    const addLayer = tf.layers.add();\r\n    var h = tf.layers.dense({units: this.n_units, activation:'relu'}).apply(h);           //n hidden\r\n    h=addLayer.apply([tm,h]);\r\n    h=tf.layers.batchNormalization(0).apply(h);\r\n  }\r\n\r\n  var o = tf.layers.dense({units: this.latent_dim}).apply(h);\r\n                                                                    //1 final\r\n  this.encoder = tf.model({inputs: i, outputs: o});\r\n\r\n  // build the decoder\r\n  var i = h = tf.input({shape: this.latent_dim});\r\n  h = tf.layers.dense({units: this.n_units, activation:'relu'}).apply(h);\r\n  for (var j=0; j<this.n_layers-1; j++) {\r\n    var tm=h;\r\n    const addLayer = tf.layers.add();                                                  //n hidden\r\n    var h = tf.layers.dense({units: this.n_units, activation:'relu'}).apply(h);\r\n    h=addLayer.apply([tm,h]);\r\n  }\r\n\r\n  var o = tf.layers.dense({units: this.img_units}).apply(h);                              //1 final\r\n  var o = tf.layers.reshape({targetShape: this.img_shape}).apply(o);\r\n  this.decoder = tf.model({inputs: i, outputs: o});\r\n\r\n  // stack the autoencoder\r\n  var i = tf.input({shape: this.img_shape});\r\n  var z = this.encoder.apply(i);                                                          //z is hidden code\r\n  var o = this.decoder.apply(z);\r\n  this.auto = tf.model({inputs: i, outputs: o});\r\n\r\n}\r\n\r\n\r\nlet epochs=0,trainEpochs,batch;\r\nvar trainData;\r\nvar testData;\r\nvar b;var model;\r\n\r\n\r\n\r\nasync function train(model) {\r\n\r\n  const e=document.getElementById('batchsize');\r\n  batch = Number(e.value);\r\n  const validationSplit = Number(0);\r\n\r\n  // Get number of training epochs from the UI.\r\n  const element=document.getElementById('train-epochs');\r\n  trainEpochs = Number(element.value);\r\n  const lr = Number(document.getElementById('lr').value);\r\n\r\n\r\n  epochs=Number(epochs)+Number(trainEpochs);\r\n\r\n  const y=trainData.xs.reshape([-1,28,28]);\r\n\r\n  model.auto.compile({optimizer: 'adam', loss: 'meanSquaredError', lr: lr});\r\n  const onBatchEnd=loadbar;\r\n\r\n  await model.auto.fit(y, y, {\r\n    batchSize:batch,\r\n    validationSplit:validationSplit,\r\n    epochs: trainEpochs,\r\n    callbacks: [{\r\n    onBatchEnd: loadbar,}],\r\n  });\r\nawait showPredictions(model,epochs);                                      //Trivial Samples of autoencoder\r\n\r\n}\r\n\r\nasync function showPredictions(model,epochs) {                              //Trivial Samples of autoencoder\r\n  const testExamples = 10;\r\n  const examples = data.getTestData(testExamples);\r\n\r\n  tf.tidy(() => {\r\n    const output = model.auto.predict(examples.xs.reshape([-1,28,28]));\r\n\r\n    ui.showTestResults(examples.xs.reshape([-1,28,28]),output,epochs);\r\n  });\r\n}\r\n\r\n\r\nvar data,vis=Number(500);\r\nasync function run(){\r\n  data = new MnistData();\r\n  await data.load();\r\n  trainData = data.getTrainData();\r\n  testData = data.getTestData();\r\n}\r\n\r\ndocument.getElementById('vis').oninput=function(){vis=Number(document.getElementById('vis').value);console.log(vis);};\r\n\r\nasync function load() {\r\n  var ele=document.getElementById('barc');\r\n  ele.style.display=\"none\";\r\n  const n_units=document.getElementById('n_units').value;\r\n  const n_layers=document.getElementById('n_layers').value;\r\n  const hidden=document.getElementById('hidden').value;\r\n  model = new createConvModel(n_layers,n_units,hidden);                                 //load model\r\n  const elem=document.getElementById('new')\r\n  elem.innerHTML=\"Model Created!!!\"\r\n  epochs=0;\r\n  vis=Number(document.getElementById('vis').value);\r\n}\r\n\r\nload();\r\n\r\n\r\n\r\nasync function runtrain(){\r\n  var ele=document.getElementById('barc');\r\n  ele.style.display=\"block\";\r\n  var elem=document.getElementById('new');\r\n  elem.innerHTML=\"\";\r\n  b=0;\r\n  await train(model);                                                                 //start training\r\n  vis=Number(document.getElementById('vis').value);\r\n}\r\n\r\nfunction loadbar(){\r\n  var element=document.getElementById(\"bar\");\r\n  element.style.width=Math.min(Math.ceil((b*100*batch)/(trainEpochs*55000)),100)+'%';\r\n  element.innerHTML=Math.min(Math.ceil((b*100*batch)/(trainEpochs*55000)),100)+'%';\r\n  b++;\r\n  console.log(b);\r\n}\r\n\r\n\r\n\r\nfunction normaltensor(prediction){\r\n    for(var i=0;i<prediction.length;i++){prediction[i]+=50;prediction[i]/=100;}\r\n    prediction=(tf.tensor(prediction)).toFloat();\r\n\r\n    const inputMax = prediction.max();\r\n    const inputMin = prediction.min();\r\n    prediction= prediction.sub(inputMin).div(inputMax.sub(inputMin));\r\n    return prediction;}\r\nfunction normal(prediction){\r\n  const inputMax = prediction.max();                                                            //normailization\r\n  const inputMin = prediction.min();\r\n  prediction= prediction.sub(inputMin).div(inputMax.sub(inputMin));\r\n  return prediction;\r\n}\r\n\r\n\r\nvar container=document.getElementById('cn');               //plot2d area\r\nconst canvas=document.getElementById('celeba-scene');\r\nconst mot=document.getElementById('mot');\r\nvar cont=mot.getContext('2d');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction sample(obj) {                                    //plotting\r\n  obj.x = (obj.x) * vis;\r\n  obj.y = (obj.y) * vis;\r\n  // convert 10, 50 into a vector\r\n  var y = tf.tensor2d([[obj.x, obj.y]]);\r\n\r\n  var prediction = model.decoder.predict(y).dataSync();\r\n                   //scaling\r\n  prediction=normaltensor(prediction);\r\n  prediction=prediction.reshape([28,28]);\r\n\r\n  prediction=prediction.mul(255).toInt();                                        //for2dplot\r\n  // log the prediction to the browser console\r\n  tf.browser.toPixels(prediction, canvas);\r\n}\r\n\r\nvar mouse={x:0,y:0};\r\nsample(mouse);\r\ncont.fillStyle = \"#DDDDDD\";\r\ncont.fillRect(0,0,mot.width,mot.height);\r\nmot.addEventListener('mousemove', function(e) {\r\n    mouse.x = (e.pageX - this.offsetLeft)*3.43;\r\n    mouse.y = (e.pageY - this.offsetTop)*1.9;\r\n}, false);                                                                        //mouse movement for 2dplot\r\n\r\nmot.addEventListener('mousedown', function(e) {\r\n    mot.addEventListener('mousemove', on, false);\r\n}, false);\r\n\r\nmot.addEventListener('mouseup', function() {\r\n    mot.removeEventListener('mousemove', on, false);\r\n}, false);\r\n\r\nvar on= function() {\r\n  cont.fillStyle = \"#BBBBBB\";\r\n    cont.fillRect(0,0,mot.width,mot.height);\r\n    cont.fillStyle=\"#000000\";\r\n    cont.fillRect(mouse.x-10,mouse.y-10, 40, 20);\r\n    sample(mouse);\r\n};\r\n\r\n\r\nfunction plot2d(){\r\n  load();\r\n  const decision=Number(document.getElementById(\"hidden\").value);\r\n  if(decision===Number(2)){\r\n    container.style.display=\"block\";\r\n  }\r\n  else {  var context = canvas.getContext('2d');\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    container.style.display=\"none\";                                                  //clearing canvas for higher dimensions\r\n    }\r\n}\r\n\r\n\r\nconst el=document.getElementById('Create')                                                //listeners\r\nel.addEventListener('click', plot2d);\r\nconst element=document.getElementById('train')\r\nelement.addEventListener('click', runtrain);\r\n\r\ndocument.addEventListener('DOMContentLoaded', run);\r\ndocument.addEventListener('DOMContentLoaded',plot2d);                                                  //load model\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst canv=document.getElementById('canv');\r\nconst outcanv=document.getElementById('outcanv');\r\nvar ct = outcanv.getContext('2d');\r\n\r\nvar ctx = canv.getContext('2d');\r\n\r\nfunction clear(){\r\n    ctx.clearRect(0, 0, canv.width, canv.height);\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillRect(0, 0, canv.width, canv.height);                                                                    //for canvas autoencoding\r\n    ct.clearRect(0, 0, outcanv.width, outcanv.height);\r\n    ct.fillStyle = \"#DDDDDD\";\r\n    ct.fillRect(0, 0, outcanv.width, outcanv.height);\r\n}\r\ndocument.getElementById('clear').addEventListener('click',clear);\r\ndocument.getElementById('save').addEventListener('click',rundraw);\r\nclear();\r\n\r\n\r\n  var mouse = {x: 0, y: 0};\r\n  var last_mouse = {x: 0, y: 0};\r\n\r\n  /* Mouse Capturing Work */\r\n  canv.addEventListener('mousemove', function(e) {\r\n      last_mouse.x = mouse.x;\r\n      last_mouse.y = mouse.y;\r\n\r\n      mouse.x = (e.pageX - this.offsetLeft)/1.34;\r\n      mouse.y = (e.pageY - this.offsetTop)/2.7;\r\n  }, false);\r\n\r\n\r\n  /* Drawing on Paint App */\r\n  ctx.lineWidth = 15;\r\n  ctx.lineJoin = 'round';\r\n  ctx.lineCap = 'round';\r\n  ctx.strokeStyle = 'white';\r\n\r\n  canv.addEventListener('mousedown', function(e) {\r\n      canv.addEventListener('mousemove', onPaint, false);\r\n  }, false);\r\n\r\n  canv.addEventListener('mouseup', function() {\r\n      canv.removeEventListener('mousemove', onPaint, false);\r\n  }, false);\r\n\r\n  var onPaint = function() {\r\n      ctx.beginPath();\r\n      ctx.moveTo(last_mouse.x, last_mouse.y);\r\n      ctx.lineTo(mouse.x, mouse.y);\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n  };\r\n\r\nfunction rundraw(){\r\n  var sm=tf.browser.fromPixels(canv,1);\r\n  sm=sm.toFloat().resizeNearestNeighbor([28,28]).reshape([-1,28,28]);\r\n  sm=normal(sm);\r\n\r\n  var pr=model.auto.predict(sm).dataSync();\r\n  pr=normal(tf.tensor(pr).toFloat()).reshape([28,28]).mul(255.0).toInt();\r\n  tf.browser.toPixels(pr, outcanv);\r\n}\r\n"]}